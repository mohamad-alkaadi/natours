  res.status(err.statusCode).json({
    status: err.status,
    message: err.message,
  });

  we are sending this error message to everyone no matter of they are in development or in production

  in production we want to leak as little information about our errors to our client as possible

  so we want to send only nice human friendly message

  in development we want to gt as much information about the error as possible

  step 1:
  module.exports = (err, req, res, next) => {
  // we define the default status code
  // this means if express knows the error it will provide it to us if not return 500
  err.statusCode = err.statusCode || 500;
  err.status = err.status || 'error';

  if (process.env.NODE_ENV === 'development') {
    res.status(err.statusCode).json({
      status: err.status,
      error: err,
      message: err.message,
      stack: err.stack,
    });
  } else if (process.env.NODE_ENV === 'production') {
    res.status(err.statusCode).json({
      status: err.status,
      message: err.message,
    });
  }
};


step 2: make each condition use a function to make it more readable and easier to understand


step 3: we are marking all the errors that we have created as operational error
and we want to send errors to the client only if it is an operational error 

so when we have a programming error for example or other unknown error we don't  want to send that error to the client

